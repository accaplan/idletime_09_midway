!function(n,e){for(var t in e)n[t]=e[t]}(exports,function(n){var e={};function t(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return n[r].call(s.exports,s,s.exports,t),s.l=!0,s.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var s in n)t.d(r,s,function(e){return n[e]}.bind(null,s));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=1)}([,function(n,e,t){"use strict";t.r(e),t.d(e,"headers",(function(){return o})),t.d(e,"shopifyConfig",(function(){return u})),t.d(e,"statusReturn",(function(){return p})),t.d(e,"preparePayload",(function(){return T})),t.d(e,"SHOPIFY_GRAPHQL_URL",(function(){return s})),t.d(e,"CUSTOMER_QUERY",(function(){return i})),t.d(e,"CUSTOMER_RECOVERY_QUERY",(function(){return a})),t.d(e,"CUSTOMER_TOKEN_QUERY",(function(){return c})),t.d(e,"CUSTOMER_LOGOUT_QUERY",(function(){return d})),t.d(e,"CUSTOMER_CREATE_QUERY",(function(){return l})),t.d(e,"CUSTOMER_RESET_QUERY",(function(){return m})),t.d(e,"CUSTOMER_ACTIVATE_QUERY",(function(){return f}));const{SHOPIFY_TOKEN:r,SHOPIFY_GRAPHQL_URL:s}=process.env,o={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"Content-Type","Content-Type":"application/json"},u={"Content-Type":"application/json","X-Shopify-Storefront-Access-Token":r},i="query customerQuery($customerAccessToken: String!){\n  customer(customerAccessToken: $customerAccessToken) {\n    firstName\n    lastName\n    acceptsMarketing\n    phone\n    email\n    defaultAddress {\n      \n  firstName\n  lastName\n  address1\n  address2\n  company\n  phone\n  city\n  country\n  province\n  zip\n\n    }\n    orders(first:100){\n      edges{\n        node{\n          orderNumber\n          totalPrice\n          processedAt\n          statusUrl\n          successfulFulfillments(first: 100){\n            trackingInfo(first: 100){\n              number\n              url\n            }\n          }\n          lineItems(first:100){\n            edges{\n              node{\n                quantity\n                title\n                variant{\n                  title\n                  price\n                  image{\n                    originalSrc\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",c="mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n  customerAccessTokenCreate(input: $input) {\n    userErrors {\n      field\n      message\n    }\n    customerAccessToken {\n      accessToken\n      expiresAt\n    }\n  }\n}\n",a="mutation customerRecover($email: String!) {\n  customerRecover(email: $email) {\n    userErrors {\n      field\n      message\n    }\n  }\n}",d="mutation customerAccessTokenDelete($customerAccessToken: String!) {\n  customerAccessTokenDelete(customerAccessToken: $customerAccessToken) {\n    userErrors {\n      field\n      message\n    }\n    deletedAccessToken\n    deletedCustomerAccessTokenId\n  }\n}",l="mutation customerCreate($input: CustomerCreateInput!) {\n  customerCreate(input: $input) {\n    userErrors {\n      field\n      message\n    }\n    customer {\n      id\n    }\n    customerUserErrors {\n      field\n      message\n    }\n  }\n}",m="mutation customerReset($id: ID!, $input: CustomerResetInput!) {\n  customerReset(id: $id, input: $input) {\n    userErrors {\n      field\n      message\n    }\n    customer {\n      email\n    }\n  }\n}",f="mutation customerActivate($id: ID!, $input: CustomerActivateInput!) {\n  customerActivate(id: $id, input: $input) {\n    userErrors {\n      field\n      message\n    }\n    customer {\n      email\n    }\n  }\n}",p=(n,e)=>({statusCode:n,headers:o,body:JSON.stringify(e)}),T=(n,e)=>({query:n,variables:e})}]));